// STRAUTOMATOR CORE SETTINGS
// Here are most of the Strautomator settings.

{
    "app": {
        "title": "Strautomator",
        // Hashtag used on social media.
        "hashtag": "#strautomator.com"
    },
    "announcements": {
        // Active announcements should be cached for up to 30 minutes.
        "cacheDuration": 1800
    },
    "axios": {
        // Retry axios requests afew 6 seconds. Value set in milliseconds.
        "retryInterval": 6000
    },
    "calendar": {
        // Default activity fields to be added to event details. Each item is a line, and multiple fields
        // can be added to same line separated by comma.
        "activityFields": ["distance,elevationGain", "speedAvg", "calories", "hrAvg,wattsAvg", "description"],
        // Default template for the event summary.
        "eventSummary": "${name} ${icon}",
        // Calendar base name.
        "name": "Strava",
        // Default event duration in minutes (ie. for past club events).
        "defaultDurationMinutes": 15,
        // Calendars are cached on aveage for up to 4 hours.
        "cacheDuration": 14400,
        // Calendars are cached for a maximum of 4 days, even if there were no new activities. Value in seconds.
        "maxCacheDuration": 345600
    },
    "database": {
        // If you're hosting multiple sites or services within the same Google Project,
        // you might add a default suffix to Firestore collection names.
        "collectionSuffix": "",
        // Single documents from the database can get cached in memory. Value set in seconds.
        // To disable, set this to null.
        "cacheDuration": 2,
        // Encryption options.
        "crypto": {
            "algorithm": "aes-256-cbc",
            // List of property names that should be saved in encrypted format.
            "fields": ["accessToken", "previousAccessToken", "refreshToken", "urlToken", "password", "cryptoKey"],
            // Encryption key and IV must be set on the settings.secret.json file, or via the
            // $SMU_database_crypto_key and $SMU_database_crypto_iv environment variables.
            "key": null,
            "iv": null
        },
        // You can use this settings to read data from production by allowing a user
        // to login with credentials stored on dev, but using recipes / activities / gearwear
        // data from production, by setting the collection suffix used in production.
        // This is for READ ONLY! No data will be ever written to production while on test.
        // Leave as null to disable.
        "readProductionSuffix": null
    },
    "faq": {
        // Download questions from the database twice a day by default. Value set in seconds.
        "refreshInterval": 43200
    },
    "gcp": {
        // The project ID on Google Cloud must be set on the settings.secret.json file
        // or via the SMU_gcp_projectId environment variable.
        "projectId": null,
        "downloadSettings": {
            // If you wish the app to download settings from Google Cloud Storage on startup, please
            // specify the bucket name and filename below on your secret settings or via the
            // SMU_gcp_downloadSettings_bucket and SMU_gcp_downloadSettings_filename environment
            // variables. We HIGHLY recommend you to have the settings file encrypted there.
            "bucket": null,
            "filename": "settings.secret.json"
        }
    },
    "gearwear": {
        // By default, when update distance for gear components, get activities that happened
        // 2 days ago (so users will have some time to set the correct activity gear).
        "delayDays": 2,
        // Wait at least 10 days before sending another GearWear reminder.
        "reminderDays": 10,
        // Remind user if tracking was not reset and current usage has passed 15% of the alert value.
        "reminderThreshold": 1.15
    },
    "github": {
        "api": {
            "baseUrl": "https://api.github.com/",
            "repo": "strautomator/web"
        }
    },
    "mailer": {
        // The default "from" on sent emails should be set on settings.secret.json file
        // or via the SMU_mailer_from environment variable.
        "from": "noreply@strautomator.com",
        // Optional BCC address to be added to all sent emails.
        "bcc": null,
        // Default SMTP settings are valid for Amazon SES. You can overwrite these on
        // on your secret settings or via environment variables.
        "smtp": {
            "secure": true,
            "host": "email-smtp.us-east-1.amazonaws.com",
            "port": 465,
            "auth": {
                // User and password must be set via the settings.secret.json file
                // or using environment variables.
                "user": null,
                "pass": null
            }
        },
        // An extra SMTP server might be configured as a fallback. Use the same
        // property names defined on the "smtp" above. The fallback will only
        // be enabled if you have defined a user and password.
        "smtpFallback": {
            "secure": true,
            "host": "smtp.sendgrid.net",
            "port": 465,
            "auth": {
                "user": null,
                "pass": null
            }
        }
    },
    "maps": {
        // Cache geolocation results for 24 hours. Value set in seconds.
        "cacheDuration": 86400,
        // Geocoded results are cached down to a precision of around 1km (2 decimal digits).
        "cachePrecision": 2,
        // Circle color, will also be used as a fill color with half opacity.
        "circleColor": "0x0066CC",
        // Default marker style and color.
        "defaultStyle": "color:red",
        // Default map size in pixels.
        "defaultSize": 380,
        // Default zoom level 10 (far) to 19 (closer).
        "defaultZoom": 16,
        // The Google Maps API key must be set on settings.secret.json file or
        // via the SMU_maps_api_key environment variable.
        "api": {
            "key": null,
            // Static maps base URL.
            "baseStaticUrl": "https://maps.googleapis.com/maps/api/staticmap?"
        }
    },
    "notifications": {
        // Cache notification results for up to 4 seconds.
        "cacheDuration": 4,
        // Messages will auto expire after 3 months.
        "defaultExpireDays": 90,
        // Send notifications via email if unread notifications hits a certain count.
        "emailReminderCount": 10,
        // Delete read user messages after 30 days.
        "readDeleteAfterDays": 30
    },
    "oauth": {
        // Alert users after 2 token failures.
        "tokenFailuresAlert": 2,
        // Disable users after 10 token failures.
        "tokenFailuresDisable": 10,
        // Token exchange requests times out in 10 seconds. This applies to all
        // OAuth2 modules (Strava, PayPal, etc).
        "tokenTimeout": 10000
    },
    "paypal": {
        "api": {
            "mode": "live",
            "baseUrl": "https://api.paypal.com/v1/",
            // Token to be appended to the URL of PayPal webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set voa the settings.secret.json file or via
            // via the SMU_paypal_api_urlToken environment variable.
            "urlToken": null,
            // The PayPal API client ID and secret must be set on the settings.secret.json file,
            // or via the SMU_paypal_api_clientId and SMU_paypal_api_clientSecret env variables.
            // Please note that on development it will default the sandbox environment.
            "clientId": null,
            "clientSecret": null,
            // List of webhook event types that Strautomator should listen to. The payment events
            // are specially important to automatically manage PRO accounts.
            "webhookEvents": [
                "PAYMENT.SALE.COMPLETED",
                "PAYMENT.SALE.DENIED",
                "PAYMENT.SALE.PENDING",
                "PAYMENT.SALE.REFUNDED",
                "PAYMENT.SALE.REVERSED",
                "BILLING.SUBSCRIPTION.CREATED",
                "BILLING.SUBSCRIPTION.ACTIVATED",
                "BILLING.SUBSCRIPTION.UPDATED",
                "BILLING.SUBSCRIPTION.EXPIRED",
                "BILLING.SUBSCRIPTION.CANCELLED",
                "BILLING.SUBSCRIPTION.SUSPENDED",
                "BILLING.SUBSCRIPTION.PAYMENT.FAILED"
            ]
        },
        "billingPlan": {
            // Default currency is USD.
            "currency": "USD",
            // Names and descriptions used on PayPal billing plans.
            "name": "Strautomator Pro subscription",
            "productName": "Strautomator Pro account",
            "description": "Subscribe to get a PRO account on Strautomator",
            // Subscription agreements are set to start 5 minutes after they are approved.
            "startMinutes": 5
        }
    },
    "plans": {
        "free": {
            // Free accounts are limited to 3 recipes and 2 gearwear configuration.
            "maxRecipes": 3,
            "maxGearWear": 2,
            // Free accounts limited to 6 months of previous calendar events up to tomorrow.
            "pastCalendarDays": 180,
            "futureCalendarDays": 2,
            // Links on 1 out of 5 processed activities on free accounts by default.
            "linksOn": 5,
            // Track personal records for which sports?
            "recordSports": ["Ride", "VirtualRide", "Run", "VirtualRun"]
        },
        "pro": {
            // Pro accounts are limited to 999 (virtually unlimited) recipes and gearwear configs.
            "maxRecipes": 999,
            "maxGearWear": 999,
            // Pro accounts limited to 10 years of previous calendar events up to 1 year in the future.
            "pastCalendarDays": 3650,
            "futureCalendarDays": 365,
            // No links on Pro accounts processed activities.
            "linksOn": false,
            // Subscription prices on PayPal to get a PRO account.
            "price": {
                "year": 6.99
            },
            // Sponsorship price set on GitHub (USD).
            "githubPrice": 1.0
        }
    },
    "recipes": {
        // Text of links to be added on the percentage above. The app.url will be
        // appended at the end of the text. String is added on a new line on the
        // activity description.
        "linksTexts": ["Powered by", "Automated with"],
        // How many times a recipe can fail before getting disabled automatically.
        "maxFailures": 3,
        // Max length for specific properties.
        "maxLength": {
            "title": 40,
            "conditionValue": 600,
            "actionValue": 600
        },
        // Webhook timeout is set to 5 seconds by default. Value in milliseconds.
        "webhook": {
            "timeout": 5000
        }
    },
    // Cloud Storage buckets.
    "storage": {
        "cacheBucket": "strautomator-cache"
    },
    "strava": {
        // Some Strava resources might be cached in memory. Duration in seconds.
        "cacheDuration": {
            "athletes-stats": 60,
            "clubs": 600,
            "routes": 600
        },
        // API endpoints and credentials from Strava.
        "api": {
            "baseUrl": "https://www.strava.com/api/v3/",
            "authUrl": "https://www.strava.com/oauth/authorize",
            "deauthUrl": "https://www.strava.com/oauth/deauthorize",
            "tokenUrl": "https://www.strava.com/oauth/token",
            "scopes": "read,profile:read_all,profile:write,activity:read_all,activity:write",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 4,
            // Maximum requests per minute per instance is around 40 on Strava.
            "maxPerMinute": 40,
            // Default page size is the max of 200.
            "pageSize": 200,
            // Token to be appended to the URL of Strava webhooks, for
            // extra security. Can only include alphanumeric characters.
            // This MUST be set voa the settings.secret.json file or via
            // via the SMU_strava_api_urlToken environment variable.
            "urlToken": null,
            // Default verification token to be sent by Strava on subcriptions, MUST be set
            // via secret settings or the SMU_strava_api_verifyToken environment variable.
            "verifyToken": null
        },
        "ftp": {
            // Estimated FTP will go down by 1.5% for each week of no activities.
            "idleLossPerWeek": 0.015,
            // User's FTP will be estimated based on the last 12 weeks.
            "weeks": 12,
            // FTP can be updated only once every 24 hours.
            "sinceLastHours": 24
        },
        "records": {
            // For "average" records, consider only the activities that have at least 20 minutes of moving time.
            "minMovingTimeAvg": 1200
        },
        // Delayed processing of activities happens no earlier than 10 minutes. Value set in seconds.
        "delayedProcessingInterval": 600,
        // How long can activities stayed queued for processing? Value set in seconds.
        "maxQueueAge": 43200
    },
    "twitter": {
        // Around 60% chances of posting interesting activities on Twitter.
        "activityThreshold": 0.6
    },
    "users": {
        // Consider users idle if they had no processed activities for more than 2 months.
        "idleDays": 60,
        // Consider users dormant (no recipes, no gearwear, no activites) after 90 days.
        "dormantDays": 90,
        // Consider user subscriptions dangling (pending approval) after 5 days.
        "danglingDays": 5
    },
    "weather": {
        // Cache weather results for 15 minutes. Value set in seconds.
        "cacheDuration": 900,
        // Set the default weather providers.
        "defaultProviders": ["tomorrow", "openmeteo"],
        // Open-Meteo API settings.
        "openmeteo": {
            "baseUrl": "https://api.open-meteo.com/v1/forecast",
            // Open-Meteo API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 2000,
                "perDay": 8000
            },
            // The Open-Meteo API does not need a secret.
            "secret": true
        },
        // OpenWeatherMap API settings.
        "openweathermap": {
            "baseUrl": "https://api.openweathermap.org/data/2.5/weather",
            // OpenWeatherMap API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 300,
                "perDay": 5000
            },
            // The OpenWeatherMap API secret MUST be set via secret settings or
            // via the SMU_weather_openweathermap_secret environment variable.
            "secret": null
        },
        // Storm Glass API settings.
        "stormglass": {
            "baseUrl": "https://api.stormglass.io/v2/",
            /// Storm Glass API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 20,
                "perDay": 35
            },
            // The Storm Glass API secret MUST be set via secret settings or
            // via the SMU_weather_stormglass_secret environment variable.
            "secret": null
        },
        // Tomorrow API settings.
        "tomorrow": {
            "baseUrl": "https://api.tomorrow.io/v4/",
            // Tomorrow API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 20,
                "perDay": 450
            },
            // The Tomorrow API secret MUST be set via secret settings or
            // via the SMU_tomorrow_api_secret environment variable.
            "secret": null
        },
        // Visual Crossing API settings.
        "visualcrossing": {
            "baseUrl": "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/",
            /// Visual Crossing API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 450,
                "perDay": 900
            },
            // The Visual Crossing API secret MUST be set via secret settings or
            // via the SMU_weather_visualcrossing_secret environment variable.
            "secret": null
        },
        // WeatherAPI.com settings.
        "weatherapi": {
            "baseUrl": "https://api.weatherapi.com/v1/",
            // OpenWeathWeatherbiterMap API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 2000,
                "perDay": 5000
            },
            // The WeatherAPI.com secret MUST be set via secret settings or
            // via the SMU_weather_weatherapi_secret environment variable.
            "secret": null
        },
        // Weatherbit API settings.
        "weatherbit": {
            "baseUrl": "https://api.weatherbit.io/v2.0/current",
            // OpenWeathWeatherbiterMap API rate limits.
            "rateLimit": {
                "maxConcurrent": 3,
                "perHour": 350,
                "perDay": 450
            },
            // The Weatherbit API secret MUST be set via secret settings or
            // via the SMU_weather_weatherbit_secret environment variable.
            "secret": null
        }
    }
}
