// STRAUTOMATOR CORE SETTINGS
// Here are most of the Strautomator settings.

{
    "app": {
        // Hashtag used on social media.
        "hashtag": "#strautomator.com"
    },
    "calendar": {
        // Default activity fields to be added to events.
        "activityFields": ["distance", "elevationGain", "speedAvg", "hrAvg", "wattsAvg", "calories", "description"],
        // Calendar name.
        "name": "Strava activities",
        // Calendars are cached for a maximum of 7 days.
        "maxCacheDuration": 604800,
        // Default TTL (refresh interval) is once every 4 hours on PRO accounts, double (28800) on free.
        "ttl": 14400
    },
    "database": {
        // Single documents from the database can get cached in memory. Value set in seconds.
        // To disable, set this to null.
        "cacheDuration": 5,
        // Encryption options.
        "crypto": {
            "algorithm": "aes-256-cbc",
            // List of property names that should be saved in encrypted format.
            "fields": ["accessToken", "previousAccessToken", "refreshToken", "urlToken", "password", "cryptoKey"]
        },
        // You can use this settings to read data from production by allowing a user
        // to login with credentials stored on dev, but using recipes / activities / gearwear
        // data from production, by setting the collection suffix used in production.
        // This is for READ ONLY! No data will be ever written to production while on test.
        // Leave as null to disable.
        "readProductionSuffix": null
    },
    "faq": {
        // Download questions from the database twice a day by default. Value set in seconds.
        "refreshInterval": 43200
    },
    "gcp": {
        // The project ID on Google Cloud must be set on the settings.secret.json file
        // or via the SMU_gcp_projectId environment variable.
        "projectId": null,
        "downloadSettings": {
            // If you wish the app to download settings from Google Cloud Storage on startup, please
            // specify the bucket name and filename below on your secret settings or via the
            // SMU_gcp_downloadSettings_bucket and SMU_gcp_downloadSettings_filename environment
            // variables. We HIGHLY recommend you to have the settings file encrypted there.
            "bucket": null,
            "filename": "settings.secret.json"
        }
    },
    "gearwear": {
        // By default, when update distance for gear components, get activities that happened
        // 2 days ago (so users will have some time to set the correct activity gear).
        "previousDays": 2,
        // Wait at least 10 days before sending a GearWear reminder.
        "reminderDays": 10,
        // Remind user if tracking was not reset and current tracking has passed 20% of the alert value.
        "reminderThreshold": 1.2
    },
    "mailer": {
        // The default "from" on sent emails should be set on settings.secret.json file
        // or via the SMU_mailer_from environment variable.
        "from": "noreply@strautomator.com",
        // Default SMTP settings are valid for Amazon SES. You can overwrite these on
        // on your secret settings or via environment variables.
        "smtp": {
            "pool": true,
            "secure": true,
            "host": "email-smtp.us-east-1.amazonaws.com",
            "port": 465,
            "auth": {
                // User and password must be set via the settings.secret.json file
                // or using environment variables.
                "user": null,
                "pass": null
            }
        }
    },
    "maps": {
        // Cache geolocation results for 30 minutes. Value set in seconds.
        "cacheDuration": 1800,
        // Circle color, will also be used as a fill color with half opacity.
        "circleColor": "0x0066CC",
        // Default marker style and color.
        "defaultStyle": "color:red",
        // Default map size in pixels.
        "defaultSize": 380,
        // Default zoom level 10 (far) to 19 (closer).
        "defaultZoom": 16,
        // The Google Maps API key must be set on settings.secret.json file or
        // via the SMU_maps_api_key environment variable.
        "api": {
            "key": null,
            // Static maps base URL.
            "baseStaticUrl": "https://maps.googleapis.com/maps/api/staticmap?"
        }
    },
    "notifications": {
        // Cache notification results for up to 10 seconds.
        "cacheDuration": 10,
        // Messages will auto expire after 6 months.
        "defaultExpireDays": 180,
        // Delete read user messages after 30 days.
        "readDeleteAfterDays": 30
    },
    "oauth": {
        // Alert users after 2 failed refresh tokens.
        "reauthFailedAlert": 2,
        // Token exchange requests times out in 11 seconds. This applies to all
        // OAuth2 modules (Strava, PayPal, etc).
        "tokenTimeout": 11000
    },
    "paypal": {
        "api": {
            // The PayPal API client ID and secret must be set on the settings.secret.json file,
            // or via the SMU_paypal_api_clientId and SMU_paypal_api_clientSecret env variables.
            // Please note that on development it will default the sandbox environment.
            "clientId": null,
            "clientSecret": null,
            // List of webhook event types that Strautomator should listen to. The payment events
            // are specially important to automatically manage PRO accounts.
            "webhookEvents": [
                "PAYMENT.SALE.COMPLETED",
                "PAYMENT.SALE.DENIED",
                "PAYMENT.SALE.PENDING",
                "PAYMENT.SALE.REFUNDED",
                "PAYMENT.SALE.REVERSED",
                "BILLING.SUBSCRIPTION.CREATED",
                "BILLING.SUBSCRIPTION.ACTIVATED",
                "BILLING.SUBSCRIPTION.UPDATED",
                "BILLING.SUBSCRIPTION.EXPIRED",
                "BILLING.SUBSCRIPTION.CANCELLED",
                "BILLING.SUBSCRIPTION.SUSPENDED",
                "BILLING.SUBSCRIPTION.PAYMENT.FAILED"
            ]
        },
        "billingPlan": {
            // Default currency is USD.
            "currency": "USD",
            // Names and descriptions used on PayPal billing plans.
            "name": "Strautomator Pro subscription",
            "productName": "Strautomator Pro account",
            "description": "Subscribe to get a PRO account on Strautomator",
            // Subscription agreements are set to start 5 minutes after they are approved.
            "startMinutes": 5
        }
    },
    "plans": {
        "free": {
            // Free accounts are limited to 3 recipes and conditions, and 2 gearwear configuration.
            "maxRecipes": 3,
            "maxConditions": 3,
            "maxGearWear": 2,
            // Free accounts limited to 1 month of calendar events.
            "maxCalendarDays": 30,
            // Links on 1 out of 5 processed activities on free accounts by default.
            "linksOn": 5
        },
        "pro": {
            // Pro accounts are limited to 999 (virtually unlimited) recipes, conditions and gearwear configs.
            "maxRecipes": 999,
            "maxConditions": 999,
            "maxGearWear": 999,
            // Pro accounts limited to 2 full years of calendar events.
            "maxCalendarDays": 731,
            // No links on Pro accounts processed activities.
            "linksOn": false,
            // Subscription prices on PayPal to get a PRO account.
            "price": {
                "year": 5.99
            },
            // Sponsorship price set on GitHub (USD).
            "githubPrice": 1.0
        }
    },
    "recipes": {
        // Text of links to be added on the percentage above. The app.url will be
        // appended at the end of the text. String is added on a new line on the
        // activity description.
        "linksTexts": ["Powered by", "Updated by", "Automated with", "Tagged with", "Powered by"],
        // Max length for specific properties.
        "maxLength": {
            "title": 40,
            "conditionValue": 400,
            "actionValue": 600
        },
        // Webhook timeout is set to 5 seconds by default.
        "webhook": {
            "timeout": 5000
        }
    },
    "strava": {
        // API endpoints and credentials from Strava.
        "api": {
            "baseUrl": "https://www.strava.com/api/v3/",
            "authUrl": "https://www.strava.com/oauth/authorize",
            "deauthUrl": "https://www.strava.com/oauth/deauthorize",
            "tokenUrl": "https://www.strava.com/oauth/token",
            "scopes": "read,profile:read_all,activity:read_all,activity:write",
            // Maximum concurrent requests per instance.
            "maxConcurrent": 4,
            // Maximum requests per minute per instance. Default maximum on Strava
            // is around 40 requests per minute total, so for 2 instances we use 30
            // as load balancing is not done on a perfect 50/50 level.
            "maxPerMinute": 30,
            // Default page size 150, max is 200.
            "pageSize": 150
        }
    },
    "users": {
        // Consider users idle if they had no processed activities for more than 2 months.
        "idleDays": 60,
        // Consider users dormant (no recipes, no gearwear, no activites) after 90 days.
        "dormantDays": 90,
        // Consider user subscriptions dangling (pending approval) after 5 days.
        "danglingDays": 5
    },
    "weather": {
        // Cache weather results for 30 minutes. Value set in seconds.
        "cacheDuration": 1800,
        // Weather history can only go as far back as 90 days by default.
        "maxAgeDays": 90,
        "climacell": {
            // Base URL to the ClimaCell weather API.
            "baseUrl": "https://api.climacell.co/v3/weather/",
            // The ClimaCell API secret MUST be set via secret settings or
            // via the SMU_climacell_api_secret environment variable.
            "secret": null
        },
        "darksky": {
            // Base URL to the Dark Sky weather API.
            "baseUrl": "https://api.darksky.net/forecast/",
            // The Dark Sky API secret MUST be set via secret settings or
            // via the SMU_darksky_api_secret environment variable.
            "secret": null
        },
        "openweathermap": {
            // Base URL to the OpenWeatherMap API.
            "baseUrl": "https://api.openweathermap.org/data/2.5/weather",
            // The OpenWeatherMap API secret MUST be set via secret settings or
            // via the SMU_weather_openweathermap_secret environment variable.
            "secret": null
        },
        "weatherapi": {
            // Base URL to the WeatherAPI.com.
            "baseUrl": "https://api.weatherapi.com/v1/",
            // The WeatherAPI.com secret MUST be set via secret settings or
            // via the SMU_weather_weatherapi_secret environment variable.
            "secret": null
        },
        "weatherbit": {
            // Base URL to the Weatherbit API.
            "baseUrl": "https://api.weatherbit.io/v2.0/current",
            // The Weatherbit API secret MUST be set via secret settings or
            // via the SMU_weather_weatherbit_secret environment variable.
            "secret": null
        }
    }
}
